#!/bin/bash
#
# start-shairport.sh - Shairport Sync startup script
# This script handles startup of Shairport Sync with the system's pretty hostname
# as the AirPlay device name
#

# Default values
CONFIG_FILE="/etc/shairport-sync.conf.default"
RUNTIME_DIR="/var/lib/shairport"
RUNTIME_CONFIG="${RUNTIME_DIR}/shairport-sync.conf"
METADATA_PIPE="/tmp/shairport-sync-metadata"
PLAYPAUSE_START="/usr/bin/shairport-start"
PLAYPAUSE_STOP="/usr/bin/shairport-stop"

# Get the pretty hostname first, then try normal hostname, and finally use HiFiBerry as fallback
PRETTY_HOSTNAME=$(hostnamectl hostname --pretty 2>/dev/null)
if [ $? -ne 0 ] || [ -z "$PRETTY_HOSTNAME" ]; then
  # Try to get normal hostname
  PRETTY_HOSTNAME=$(hostname 2>/dev/null)
  if [ $? -ne 0 ] || [ -z "$PRETTY_HOSTNAME" ]; then
    PRETTY_HOSTNAME="HiFiBerry"
  fi
fi

# Create runtime directory if it doesn't exist
if [ ! -d "$RUNTIME_DIR" ]; then
  mkdir -p "$RUNTIME_DIR"
  # Set appropriate permissions
  chmod 755 "$RUNTIME_DIR"
fi

# Update mixer control settings in a copy of the config file
if [ -f "$CONFIG_FILE" ] && [ -x /usr/bin/config-soundcard ]; then
  echo "Creating runtime configuration in $RUNTIME_CONFIG"
  
  # Copy the original config file to runtime location
  cp "$CONFIG_FILE" "$RUNTIME_CONFIG"
  
  # Add comment explaining the mechanism
  sed -i '1i// This is a runtime copy of shairport-sync.conf generated by start-shairport.sh\n// Do NOT edit this file directly as changes will be lost\n// Edit the original file at /etc/shairport-sync.conf.default instead\n' "$RUNTIME_CONFIG"
  
  # Get mixer control index (hardware card number)
  MIXER_INDEX=$(config-soundcard --hw 2>/dev/null || echo "0")
  
  # Get mixer control name
  MIXER_NAME=$(config-soundcard --volume-control-softvol 2>/dev/null || echo "Softvol")
  
  # Escape any special characters in mixer name for sed
  MIXER_NAME_SED=$(echo "$MIXER_NAME" | sed 's/[\/&]/\\&/g')
  
  # Update mixer_control_name in runtime config file
  sed -i "s/mixer_control_name.*=.*;/mixer_control_name = \"$MIXER_NAME_SED\";/" "$RUNTIME_CONFIG"
  
  # Update mixer_device to use the hardware card number
  if grep -q "mixer_device" "$RUNTIME_CONFIG"; then
    # Update existing mixer_device value
    sed -i "s/mixer_device.*=.*;/mixer_device = \"hw:$MIXER_INDEX\";/" "$RUNTIME_CONFIG"
  else
    # Add mixer_device after mixer_control_name
    sed -i "/mixer_control_name/a\\  mixer_device = \"hw:$MIXER_INDEX\";" "$RUNTIME_CONFIG"
  fi
  
  echo "Updated mixer settings in runtime config: name=$MIXER_NAME, device=hw:$MIXER_INDEX"
else
  # If the original config exists but config-soundcard isn't available, just copy the file
  if [ -f "$CONFIG_FILE" ]; then
    cp "$CONFIG_FILE" "$RUNTIME_CONFIG"
    echo "Copied original config to runtime location"
  else
    echo "Error: Configuration file not found at $CONFIG_FILE"
    exit 1
  fi
fi

# Create metadata pipe if it doesn't exist
if [ ! -p "$METADATA_PIPE" ]; then
  mkfifo "$METADATA_PIPE"
fi

# Set permissions for the metadata pipe to allow audio group to read
chmod 660 "$METADATA_PIPE"
chown shairport-sync:audio "$METADATA_PIPE"

# Build shairport-sync command with options
SHAIRPORT_CMD="/usr/bin/shairport-sync"
SHAIRPORT_OPTS=(
  "--name=${PRETTY_HOSTNAME}"
  "--metadata-pipename=${METADATA_PIPE}"
  "--configfile=${RUNTIME_CONFIG}" 
  "-g"
  "--on-start=${PLAYPAUSE_START}"
  "--on-stop=${PLAYPAUSE_STOP}"
)

# Debug: print the command to be executed
echo "Starting Shairport Sync with device name: $PRETTY_HOSTNAME"
echo "Command: $SHAIRPORT_CMD ${SHAIRPORT_OPTS[@]}"

# Run shairport-sync with the configured options
exec $SHAIRPORT_CMD "${SHAIRPORT_OPTS[@]}"