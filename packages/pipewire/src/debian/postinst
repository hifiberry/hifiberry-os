#!/bin/bash
set -e

case "$1" in
    configure)
        # Create pipewire system user and group if they don't exist
        if ! getent group pipewire > /dev/null; then
            addgroup --quiet --system pipewire
        fi
        
        if ! getent passwd pipewire > /dev/null; then
            adduser --quiet --system --ingroup pipewire --home /var/lib/pipewire pipewire
            usermod -c "PipeWire System Daemon" pipewire
        else
            # Update home directory for existing pipewire user if it's not correct
            if [ "$(getent passwd pipewire | cut -d: -f6)" != "/var/lib/pipewire" ]; then
                # Check if pipewire process is running
                if ! pgrep -u pipewire > /dev/null; then
                    usermod -d /var/lib/pipewire pipewire
                    echo "Updated home directory for pipewire user to /var/lib/pipewire"
                else
                    echo "WARNING: Cannot update pipewire user home directory while pipewire is running"
                    echo "The home directory will be used from the service file environment variables"
                fi
            fi
        fi
        
        # Add pipewire user to the audio group for access to audio devices
        if getent group audio > /dev/null; then
            usermod -aG audio pipewire || true
        fi
        
        # Set proper permissions for pipewire directories
        mkdir -p /var/lib/pipewire /var/lib/pipewire/.local/state/wireplumber
        chown -R pipewire:pipewire /var/lib/pipewire
        chmod 755 /var/lib/pipewire
        chmod -R 700 /var/lib/pipewire/.local
        
        # Create runtime directory (will be handled by systemd)
        mkdir -p /run/pipewire || true
        if [ -d /run/pipewire ]; then
            chown pipewire:pipewire /run/pipewire
            chmod 755 /run/pipewire
        fi
        
        # Handle asound.conf file
        if [ -f /etc/asound.conf ] && [ ! -L /etc/asound.conf ]; then
            # Backup existing asound.conf if it's a regular file (not a symlink)
            mv /etc/asound.conf /etc/asound.conf.bak
            echo "Backed up existing /etc/asound.conf to /etc/asound.conf.bak"
        elif [ -L /etc/asound.conf ]; then
            # Remove existing symlink
            rm -f /etc/asound.conf
        fi
        
        # Copy PipeWire asound.conf
        if [ -f /etc/asound.conf.pipewire ]; then
            cp /etc/asound.conf.pipewire /etc/asound.conf
            echo "Installed PipeWire ALSA configuration to /etc/asound.conf"
        else
            echo "Warning: /etc/asound.conf.pipewire not found"
        fi
        
        # Copy ALSA configuration for PipeWire if available
        if [ -f /usr/share/alsa/alsa.conf.d/50-pipewire.conf ]; then
            cp -f /usr/share/alsa/alsa.conf.d/50-pipewire.conf /etc/alsa/conf.d/ || true
        fi
        
        # Initialize PipeWire configuration from default template if needed
        if [ ! -f /etc/pipewire/pipewire.conf ] && [ -f /etc/pipewire/pipewire.conf.default ]; then
            echo "Installing default PipeWire configuration..."
            cp /etc/pipewire/pipewire.conf.default /etc/pipewire/pipewire.conf
        fi
        
        # Headless system configuration is handled by the pre-installed override file
        echo "PipeWire headless configuration is enabled in /etc/pipewire/pipewire.conf.d/99-hifiberry-headless.conf"
        ;;
    
    abort-upgrade|abort-remove|abort-deconfigure)
        ;;
    
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

#DEBHELPER#

exit 0
